Quinto trabalho de tradutores (2016.2)
Gerador de Código Intermediário Executável: Linguagem CStr
Feito por Eduardo Furtado - 09/0111575 - eduardoxfurtado@gmail.com

----- UNIX -----
Para compilar e executar o programa em ambiente unix, rode o script "090111575.sh". Por exêmplo:
sh ./090111575.sh tac1.cstr
sh ./090111575.sh tac2.cstr
sh ./090111575.sh tac3.cstr
sh ./090111575.sh tac4.cstr
sh ./090111575.sh tac5.cstr

Depois, para executar o código gerado com o TAC, faça conforme a documentação do TAC. Por exemplo:
tac/bin/tac tac1.cstr.tac
tac/bin/tac tac2.cstr.tac
tac/bin/tac tac3.cstr.tac
tac/bin/tac tac4.cstr.tac
tac/bin/tac tac5.cstr.tac


----- WINDOWS -----
Para compilar e executar o programa em ambiente windows, pode-se fazer:
bison -o 090111575.tab.c -t -d -v 090111575.y & flex -o 090111575.yy.c 090111575.l & gcc -Wall 090111575.tab.c 090111575.yy.c semantica.c tac.c infix_to_postfix.c -lfl -o 090111575.o & 090111575.o tac1.cstr
bison -o 090111575.tab.c -t -d -v 090111575.y & flex -o 090111575.yy.c 090111575.l & gcc -Wall 090111575.tab.c 090111575.yy.c semantica.c tac.c infix_to_postfix.c -lfl -o 090111575.o & 090111575.o tac2.cstr
bison -o 090111575.tab.c -t -d -v 090111575.y & flex -o 090111575.yy.c 090111575.l & gcc -Wall 090111575.tab.c 090111575.yy.c semantica.c tac.c infix_to_postfix.c -lfl -o 090111575.o & 090111575.o tac3.cstr
bison -o 090111575.tab.c -t -d -v 090111575.y & flex -o 090111575.yy.c 090111575.l & gcc -Wall 090111575.tab.c 090111575.yy.c semantica.c tac.c infix_to_postfix.c -lfl -o 090111575.o & 090111575.o tac4.cstr
bison -o 090111575.tab.c -t -d -v 090111575.y & flex -o 090111575.yy.c 090111575.l & gcc -Wall 090111575.tab.c 090111575.yy.c semantica.c tac.c infix_to_postfix.c -lfl -o 090111575.o & 090111575.o tac5.cstr


Em seguida, é possível executar o código gerado com o TAC, faça conforme a documentação do TAC para compilar o executável do TAC e em seguida, pode executar:
tac/bin/tac.exe tac1.cstr.tac
tac/bin/tac.exe tac2.cstr.tac
tac/bin/tac.exe tac3.cstr.tac
tac/bin/tac.exe tac4.cstr.tac
tac/bin/tac.exe tac5.cstr.tac

----- VERSÕES DO AMBIENTE DE DESENVOLVIMENTO -----

----- LINUX ----- (princípal ambiente de desenvolvimento utilizado durante esta etapa)

$ gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.8.4-2ubuntu1~14.04.3' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3)

----------

g++ --version
g++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

----------

flex -V
flex 2.5.35

----------

bison -V
bison (GNU Bison) 3.0.2
Written by Robert Corbett and Richard Stallman.

Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


----- WINDOWS -----

gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=c:/mingw/bin/../libexec/gcc/mingw32/5.3.0/lto-wrapper.exe
Target: mingw32
Configured with: ../src/gcc-5.3.0/configure --build=x86_64-pc-linux-gnu --host=mingw32 --prefix=/mingw --disable-win32-registry --target=mingw32 --with-arch=i586 --enable-languages=c,c++,objc,obj-c++,fortran,ada --enable-static --enable-shared --enable-threads=posix --with-dwarf2 --disable-sjlj-exceptions --enable-version-specific-runtime-libs --enable-libstdcxx-debug --with-tune=generic --enable-libgomp --disable-libvtv --enable-nls
Thread model: posix
gcc version 5.3.0 (GCC)

----------

g++ --version
g++ (GCC) 5.3.0
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

----------

flex -V
flex 2.5.35

----------

bison -V
bison (GNU Bison) 3.0.4
Written by Robert Corbett and Richard Stallman.

Copyright (C) 2016 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.